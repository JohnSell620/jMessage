{
	"id": "7bb27de6-4788-5419-7fe6-780bf3250ebb",
	"name": "jMessage",
	"allTests": [],
	"timestamp": 1530919431374,
	"collection_id": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
		"name": "jMessage",
		"description": "Tests jMessage REST API.",
		"order": [],
		"folders": [
			{
				"name": "GETs",
				"description": "GET requests.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"collection": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"order": [
					"e360149d-e7db-269e-3345-cc1011caccb8",
					"b8eef6ad-996e-d256-1ca5-e68b44168755",
					"3acaf476-fa37-ed24-2c60-507a247e3432",
					"fcb0619b-1196-4471-94cd-57563be3d9c2",
					"1051f0f8-cb78-9f4b-1637-c7578385a5f6",
					"4bca090e-b209-d825-97ff-3c8bfedf3d53"
				],
				"owner": 0,
				"folders_order": [],
				"createdAt": 1530822528872,
				"updatedAt": 1530822528872,
				"id": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5",
				"collection_id": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f"
			},
			{
				"name": "POSTs",
				"description": "Contains POSTs.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"collection": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"order": [
					"fb0b7584-cdab-cec6-1093-0efa6e73a295",
					"bae52bb8-d20c-cb49-ccc6-b441c597a3f5",
					"d8559fb3-ceb8-1319-9a84-f22aab86d245",
					"1254f440-a23e-3417-d20d-2e364520a63e",
					"57b8de4c-8a19-68a0-89db-9569c0fc14f3"
				],
				"owner": 0,
				"folders_order": [],
				"createdAt": 1530821124934,
				"updatedAt": 1530821124934,
				"id": "f4508fca-794c-42d8-b79c-6a5b0490ac45",
				"collection_id": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f"
			}
		],
		"folders_order": [
			"f4508fca-794c-42d8-b79c-6a5b0490ac45",
			"7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5"
		],
		"requests": [
			{
				"id": "1051f0f8-cb78-9f4b-1637-c7578385a5f6",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:8080/jMessage/webapi/profiles/pat7",
				"folder": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "GET",
				"data": null,
				"dataMode": "params",
				"version": 2,
				"tests": "// Content type \ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\n// Response time\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\n// Keys are present\ntests[\"ID is present\"] = responseBody.has(\"id\");\ntests[\"Profile Name is present\"] = responseBody.has(\"profileName\");\ntests[\"First Name is present\"] = responseBody.has(\"firstName\");\ntests[\"Last Name is present\"] = responseBody.has(\"lastName\");\ntests[\"Created is present\"] = responseBody.has(\"created\");\ntests[\"User is present\"] = responseBody.has(\"user\");\n\n// // Message ID value check\nvar jsonData = JSON.parse(responseBody);\ntests[\"Profile ID should be \"+ jsonData.id] = jsonData.id === 1;\n\n// var schema = {\n//   \"$id\": \"http://example.com/example.json\",\n//   \"type\": \"object\",\n//   \"definitions\": {},\n//   \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n//   \"properties\": {\n//     \"id\": {\n//       \"$id\": \"/properties/id\",\n//       \"type\": \"integer\",\n//       \"title\": \"The Id Schema \",\n//       \"default\": 0,\n//       \"examples\": [\n//         1\n//       ]\n//     },\n//     \"profileName\": {\n//       \"$id\": \"/properties/profileName\",\n//       \"type\": \"string\",\n//       \"title\": \"The Profilename Schema \",\n//       \"default\": \"\",\n//       \"examples\": [\n//         \"pat7\"\n//       ]\n//     },\n//     \"firstName\": {\n//       \"$id\": \"/properties/firstName\",\n//       \"type\": \"string\",\n//       \"title\": \"The Firstname Schema \",\n//       \"default\": \"\",\n//       \"examples\": [\n//         \"pat\"\n//       ]\n//     },\n//     \"lastName\": {\n//       \"$id\": \"/properties/lastName\",\n//       \"type\": \"string\",\n//       \"title\": \"The Lastname Schema \",\n//       \"default\": \"\",\n//       \"examples\": [\n//         \"pats\"\n//       ]\n//     },\n//     \"created\": {\n//       \"$id\": \"/properties/created\",\n//       \"type\": \"integer\",\n//       \"title\": \"The Created Schema \",\n//       \"default\": 0,\n//       \"examples\": [\n//         1530820265000\n//       ]\n//     },\n//     \"user\": {\n//       \"$id\": \"/properties/user\",\n//       \"type\": \"integer\",\n//       \"title\": \"The User Schema \",\n//       \"default\": 0,\n//       \"examples\": [\n//         1\n//       ]\n//     }\n//   }\n// };\n\n// tests[\"Valid schema\"] = tv4.validate(jsonData, schema);\n// console.log(\"Validation failed: \", tv4.error);",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530916920387,
				"name": "GET Profile pat7",
				"description": "GET all profiles.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "1254f440-a23e-3417-d20d-2e364520a63e",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "http://localhost:8080/jMessage/webapi/messages/1/comments/",
				"folder": "f4508fca-794c-42d8-b79c-6a5b0490ac45",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n  \"message\": \"Gastropub flexitarian fixie kale chips narwhal.\",\n  \"author\": \"jim2\",\n  \"created\": \"2018-07-06 19:18:30\"\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530919331102,
				"name": "POST Comment",
				"description": "Test message API.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "3acaf476-fa37-ed24-2c60-507a247e3432",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:8080/jMessage/webapi/profiles/",
				"queryParams": [],
				"pathVariables": {},
				"pathVariableData": [],
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"data": null,
				"dataMode": "params",
				"name": "GET Profiles",
				"description": "GET all profiles.",
				"descriptionFormat": "html",
				"time": 1530916455946,
				"version": 2,
				"responses": [],
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"folder": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5"
			},
			{
				"id": "4bca090e-b209-d825-97ff-3c8bfedf3d53",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:8080/jMessage/webapi/users/john5",
				"folder": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "GET",
				"data": null,
				"dataMode": "params",
				"version": 2,
				"tests": "// Content type \ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\n// Response time\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\n// Keys are present\ntests[\"ID is present\"] = responseBody.has(\"id\");\ntests[\"Username is present\"] = responseBody.has(\"username\");\ntests[\"Password is present\"] = responseBody.has(\"password\");\ntests[\"Profile ID is present\"] = responseBody.has(\"pId\");\ntests[\"Profile is present\"] = responseBody.has(\"profile\");\n\n// // Message ID value check\nvar jsonData = JSON.parse(responseBody);\ntests[\"User ID should be \"+ jsonData.id] = jsonData.id === 2;\n",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530918862793,
				"name": "GET User john5",
				"description": "GET all profiles.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "57b8de4c-8a19-68a0-89db-9569c0fc14f3",
				"headers": "Content-Type: application/json\nAuthorization: Basic dXNlcjpwYXNzd29yZA==\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					},
					{
						"key": "Authorization",
						"value": "Basic dXNlcjpwYXNzd29yZA==",
						"description": "",
						"enabled": true
					}
				],
				"url": "http://localhost:8080/jMessage/webapi/messages/",
				"folder": "f4508fca-794c-42d8-b79c-6a5b0490ac45",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n  \"message\": \"Godard marfa shoreditch la croix, banh mi 90's thundercats hoodie schlitz tilde next level sustainable keytar roof party live-edge.\",\n  \"author\": \"jim2\",\n  \"profileId\": 3,\n  \"created\": \"2018-07-06 19:45:05\"\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "// Content type \ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\n// Response time\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\n// Keys are present\ntests[\"ID is present\"] = responseBody.has(\"id\");\ntests[\"Message is present\"] = responseBody.has(\"message\");\ntests[\"Author is present\"] = responseBody.has(\"author\");\ntests[\"Created is present\"] = responseBody.has(\"created\");\ntests[\"Links are present\"] = responseBody.has(\"links\");\n\n// Message ID value check\nvar jsonData = JSON.parse(responseBody);\ntests[\"Profile ID should be \"+ jsonData.profileId] = jsonData.profileId === 3;\ntests[\"Message ID should be \"+ jsonData.id] = jsonData.id === 9;\n\n// JSON schema test\n// Schema produced with jsonschema.net tool\nvar schema = {\n  \"$id\": \"http://example.com/example.json\",\n  \"type\": [\n    \"object\",\n    \"null\"\n  ],\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"id\": {\n      \"$id\": \"/properties/id\",\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"title\": \"The Id Schema \",\n      \"default\": 0,\n      \"examples\": [\n        1\n      ]\n    },\n    \"message\": {\n      \"$id\": \"/properties/message\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"title\": \"The Message Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Venmo vice shaman, pour-over chia you probably haven't heard of them hashtag blog.\"\n      ]\n    },\n    \"author\": {\n      \"$id\": \"/properties/author\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"title\": \"The Author Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"john5\"\n      ]\n    },\n    \"profileId\": {\n      \"$id\": \"/properties/profileId\",\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"title\": \"The Profileid Schema \",\n      \"default\": 0,\n      \"examples\": [\n        2\n      ]\n    },\n    \"created\": {\n      \"$id\": \"/properties/created\",\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"title\": \"The Created Schema \",\n      \"default\": 0,\n      \"examples\": [\n        1530821705000\n      ]\n    },\n    \"links\": {\n      \"$id\": \"/properties/links\",\n      \"type\": [\n        \"object\",\n        \"null\"\n      ],\n      \"properties\": {\n        \"1\": {\n          \"$id\": \"/properties/links/properties/1\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"$id\": \"/properties/links/properties/1/properties/id\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Id Schema \",\n              \"default\": 0,\n              \"examples\": [\n                0\n              ]\n            },\n            \"link\": {\n              \"$id\": \"/properties/links/properties/1/properties/link\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Link Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"http://localhost:8080/jMessage/webapi/messages/1/comments/comments\"\n              ]\n            },\n            \"rel\": {\n              \"$id\": \"/properties/links/properties/1/properties/rel\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Rel Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"comments\"\n              ]\n            },\n            \"messageId\": {\n              \"$id\": \"/properties/links/properties/1/properties/messageId\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Messageid Schema \",\n              \"default\": 0,\n              \"examples\": [\n                1\n              ]\n            }\n          }\n        },\n        \"3\": {\n          \"$id\": \"/properties/links/properties/3\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"$id\": \"/properties/links/properties/3/properties/id\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Id Schema \",\n              \"default\": 0,\n              \"examples\": [\n                3\n              ]\n            },\n            \"link\": {\n              \"$id\": \"/properties/links/properties/3/properties/link\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Link Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"http://github.com/JohnSell620/jMessage2\"\n              ]\n            },\n            \"rel\": {\n              \"$id\": \"/properties/links/properties/3/properties/rel\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Rel Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"JohnSell620 jMessage2 Github 2\"\n              ]\n            },\n            \"messageId\": {\n              \"$id\": \"/properties/links/properties/3/properties/messageId\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Messageid Schema \",\n              \"default\": 0,\n              \"examples\": [\n                1\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests[\"Valid schema\"] = tv4.validate(jsonData, schema);\nconsole.log(\"Validation failed: \", tv4.error);",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530919427101,
				"name": "POST Message",
				"description": "Test message API.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "b8eef6ad-996e-d256-1ca5-e68b44168755",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:8080/jMessage/webapi/messages/",
				"folder": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "GET",
				"data": null,
				"dataMode": "params",
				"tests": "// Content type \ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\n// Response time\ntests[\"Response time is less than 200ms\"] = responseTime < 400;\n\n// Keys are present\ntests[\"ID is present\"] = responseBody.has(\"id\");\ntests[\"Message is present\"] = responseBody.has(\"message\");\ntests[\"Author is present\"] = responseBody.has(\"author\");\ntests[\"Created is present\"] = responseBody.has(\"created\");\ntests[\"Links are present\"] = responseBody.has(\"links\");\n\n",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530916464998,
				"name": "GET Messages",
				"description": "GET request for message.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "bae52bb8-d20c-cb49-ccc6-b441c597a3f5",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "http://localhost:8080/jMessage/webapi/users/",
				"folder": "f4508fca-794c-42d8-b79c-6a5b0490ac45",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n    \"username\": \"jack2\",\n    \"password\": \"password\",\n    \"pId\": \"4\"\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530919280821,
				"name": "POST User",
				"description": "POST new users.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "d8559fb3-ceb8-1319-9a84-f22aab86d245",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "http://localhost:8080/jMessage/webapi/profiles/",
				"folder": "f4508fca-794c-42d8-b79c-6a5b0490ac45",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n    \"profileName\": \"jack2\",\n    \"firstName\" : \"jack\",\n    \"lastName\": \"jacks\",\n    \"created\": \"2018-07-06 19:21:05\"\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": "",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530919312054,
				"name": "POST Profile",
				"description": "POST new profiles.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "e360149d-e7db-269e-3345-cc1011caccb8",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:8080/jMessage/webapi/messages/1",
				"folder": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "GET",
				"data": null,
				"dataMode": "params",
				"tests": "// Content type \ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\n// Response time\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\n// Keys are present\ntests[\"ID is present\"] = responseBody.has(\"id\");\ntests[\"Message is present\"] = responseBody.has(\"message\");\ntests[\"Author is present\"] = responseBody.has(\"author\");\ntests[\"Created is present\"] = responseBody.has(\"created\");\ntests[\"Links are present\"] = responseBody.has(\"links\");\n\n// Message ID value check\nvar jsonData = JSON.parse(responseBody);\ntests[\"User ID should be \"+ jsonData.id] = jsonData.id === 1;\n\n// JSON schema test\n// Schema produced with jsonschema.net tool\nvar schema = {\n  \"$id\": \"http://example.com/example.json\",\n  \"type\": [\n    \"object\",\n    \"null\"\n  ],\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"properties\": {\n    \"id\": {\n      \"$id\": \"/properties/id\",\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"title\": \"The Id Schema \",\n      \"default\": 0,\n      \"examples\": [\n        1\n      ]\n    },\n    \"message\": {\n      \"$id\": \"/properties/message\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"title\": \"The Message Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"Venmo vice shaman, pour-over chia you probably haven't heard of them hashtag blog.\"\n      ]\n    },\n    \"author\": {\n      \"$id\": \"/properties/author\",\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"title\": \"The Author Schema \",\n      \"default\": \"\",\n      \"examples\": [\n        \"john5\"\n      ]\n    },\n    \"profileId\": {\n      \"$id\": \"/properties/profileId\",\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"title\": \"The Profileid Schema \",\n      \"default\": 0,\n      \"examples\": [\n        2\n      ]\n    },\n    \"created\": {\n      \"$id\": \"/properties/created\",\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"title\": \"The Created Schema \",\n      \"default\": 0,\n      \"examples\": [\n        1530821705000\n      ]\n    },\n    \"links\": {\n      \"$id\": \"/properties/links\",\n      \"type\": [\n        \"object\",\n        \"null\"\n      ],\n      \"properties\": {\n        \"1\": {\n          \"$id\": \"/properties/links/properties/1\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"$id\": \"/properties/links/properties/1/properties/id\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Id Schema \",\n              \"default\": 0,\n              \"examples\": [\n                0\n              ]\n            },\n            \"link\": {\n              \"$id\": \"/properties/links/properties/1/properties/link\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Link Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"http://localhost:8080/jMessage/webapi/messages/1/comments/comments\"\n              ]\n            },\n            \"rel\": {\n              \"$id\": \"/properties/links/properties/1/properties/rel\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Rel Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"comments\"\n              ]\n            },\n            \"messageId\": {\n              \"$id\": \"/properties/links/properties/1/properties/messageId\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Messageid Schema \",\n              \"default\": 0,\n              \"examples\": [\n                1\n              ]\n            }\n          }\n        },\n        \"3\": {\n          \"$id\": \"/properties/links/properties/3\",\n          \"type\": [\n            \"object\",\n            \"null\"\n          ],\n          \"properties\": {\n            \"id\": {\n              \"$id\": \"/properties/links/properties/3/properties/id\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Id Schema \",\n              \"default\": 0,\n              \"examples\": [\n                3\n              ]\n            },\n            \"link\": {\n              \"$id\": \"/properties/links/properties/3/properties/link\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Link Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"http://github.com/JohnSell620/jMessage2\"\n              ]\n            },\n            \"rel\": {\n              \"$id\": \"/properties/links/properties/3/properties/rel\",\n              \"type\": [\n                \"string\",\n                \"null\"\n              ],\n              \"title\": \"The Rel Schema \",\n              \"default\": \"\",\n              \"examples\": [\n                \"JohnSell620 jMessage2 Github 2\"\n              ]\n            },\n            \"messageId\": {\n              \"$id\": \"/properties/links/properties/3/properties/messageId\",\n              \"type\": [\n                \"integer\",\n                \"null\"\n              ],\n              \"title\": \"The Messageid Schema \",\n              \"default\": 0,\n              \"examples\": [\n                1\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n};\ntests[\"Valid schema\"] = tv4.validate(jsonData, schema);\nconsole.log(\"Validation failed: \", tv4.error);",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530899905747,
				"name": "GET Message",
				"description": "GET request for message.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "fb0b7584-cdab-cec6-1093-0efa6e73a295",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "",
						"value": "",
						"description": "",
						"enabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "http://localhost:8080/jMessage/webapi/messages/2/links/",
				"folder": "f4508fca-794c-42d8-b79c-6a5b0490ac45",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n\t\"link\": \"http://github.com/JohnSell620/jMessage4\",\n\t\"rel\": \"JohnSell620 jMessage4 Github 4\"\n}",
				"dataMode": "raw",
				"version": 2,
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530918907854,
				"name": "POST Link",
				"description": "POST new links.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			},
			{
				"id": "fcb0619b-1196-4471-94cd-57563be3d9c2",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:8080/jMessage/webapi/users/",
				"folder": "7dee92b7-75f9-4ceb-9c70-cdc38ee75eb5",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "GET",
				"data": null,
				"dataMode": "params",
				"version": 2,
				"tests": "// Content type \ntests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\n\n// Response time\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\n// Keys are present\ntests[\"ID is present\"] = responseBody.has(\"id\");\ntests[\"Username is present\"] = responseBody.has(\"username\");\ntests[\"Password is present\"] = responseBody.has(\"password\");\ntests[\"Profile ID is present\"] = responseBody.has(\"pId\");\ntests[\"Profile is present\"] = responseBody.has(\"profile\");\n\n",
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1530917802462,
				"name": "GET Users",
				"description": "GET all profiles.",
				"collectionId": "9be97ce2-d0a4-98ca-6f6b-701c1a88912f",
				"responses": []
			}
		],
		"timestamp": 1530809325250,
		"synced": false,
		"syncedFilename": "",
		"remote_id": 0,
		"remoteLink": "",
		"remoteLinkUpdatedAt": null,
		"public": false,
		"owner": "4788072",
		"subscribed": false,
		"createdAt": 1530809325250,
		"updatedAt": "2018-07-06T23:03:00.260Z",
		"write": true,
		"published": false,
		"favorite": false,
		"permissions": {},
		"syncedPermissions": {},
		"sharedWithTeam": false
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"id": "fb0b7584-cdab-cec6-1093-0efa6e73a295",
			"name": "POST Link",
			"url": "http://localhost:8080/jMessage/webapi/messages/2/links/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				10
			],
			"allTests": [
				{}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "bae52bb8-d20c-cb49-ccc6-b441c597a3f5",
			"name": "POST User",
			"url": "http://localhost:8080/jMessage/webapi/users/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		},
		{
			"id": "d8559fb3-ceb8-1319-9a84-f22aab86d245",
			"name": "POST Profile",
			"url": "http://localhost:8080/jMessage/webapi/profiles/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				12
			],
			"allTests": [
				{}
			],
			"time": 12,
			"totalRequestTime": 12,
			"iterationResults": {}
		},
		{
			"id": "1254f440-a23e-3417-d20d-2e364520a63e",
			"name": "POST Comment",
			"url": "http://localhost:8080/jMessage/webapi/messages/1/comments/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				11
			],
			"allTests": [
				{}
			],
			"time": 11,
			"totalRequestTime": 11,
			"iterationResults": {}
		},
		{
			"id": "57b8de4c-8a19-68a0-89db-9569c0fc14f3",
			"name": "POST Message",
			"url": "http://localhost:8080/jMessage/webapi/messages/",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": "The request has been fulfilled and resulted in a new resource being created."
			},
			"tests": {
				"Content-Type is present": "application/json",
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Message is present": true,
				"Author is present": true,
				"Created is present": true,
				"Links are present": true,
				"Profile ID should be 3": true,
				"Message ID should be 9": true,
				"Valid schema": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Message is present": {
					"pass": 1,
					"fail": 0
				},
				"Author is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"Links are present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID should be 3": {
					"pass": 1,
					"fail": 0
				},
				"Message ID should be 9": {
					"pass": 1,
					"fail": 0
				},
				"Valid schema": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Content-Type is present": "application/json",
					"Response time is less than 200ms": true,
					"ID is present": true,
					"Message is present": true,
					"Author is present": true,
					"Created is present": true,
					"Links are present": true,
					"Profile ID should be 3": true,
					"Message ID should be 9": true,
					"Valid schema": true
				}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "e360149d-e7db-269e-3345-cc1011caccb8",
			"name": "GET Message",
			"url": "http://localhost:8080/jMessage/webapi/messages/1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Content-Type is present": "application/json",
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Message is present": true,
				"Author is present": true,
				"Created is present": true,
				"Links are present": true,
				"User ID should be 1": true,
				"Valid schema": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Message is present": {
					"pass": 1,
					"fail": 0
				},
				"Author is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"Links are present": {
					"pass": 1,
					"fail": 0
				},
				"User ID should be 1": {
					"pass": 1,
					"fail": 0
				},
				"Valid schema": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Content-Type is present": "application/json",
					"Response time is less than 200ms": true,
					"ID is present": true,
					"Message is present": true,
					"Author is present": true,
					"Created is present": true,
					"Links are present": true,
					"User ID should be 1": true,
					"Valid schema": true
				}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "b8eef6ad-996e-d256-1ca5-e68b44168755",
			"name": "GET Messages",
			"url": "http://localhost:8080/jMessage/webapi/messages/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Content-Type is present": "application/json",
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Message is present": true,
				"Author is present": true,
				"Created is present": true,
				"Links are present": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Message is present": {
					"pass": 1,
					"fail": 0
				},
				"Author is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"Links are present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Content-Type is present": "application/json",
					"Response time is less than 200ms": true,
					"ID is present": true,
					"Message is present": true,
					"Author is present": true,
					"Created is present": true,
					"Links are present": true
				}
			],
			"time": 18,
			"totalRequestTime": 18,
			"iterationResults": {}
		},
		{
			"id": "3acaf476-fa37-ed24-2c60-507a247e3432",
			"name": "GET Profiles",
			"url": "http://localhost:8080/jMessage/webapi/profiles/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				7
			],
			"allTests": [
				{}
			],
			"time": 7,
			"totalRequestTime": 7,
			"iterationResults": {}
		},
		{
			"id": "fcb0619b-1196-4471-94cd-57563be3d9c2",
			"name": "GET Users",
			"url": "http://localhost:8080/jMessage/webapi/users/",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Content-Type is present": "application/json",
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Username is present": true,
				"Password is present": true,
				"Profile ID is present": true,
				"Profile is present": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Username is present": {
					"pass": 1,
					"fail": 0
				},
				"Password is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile is present": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"Content-Type is present": "application/json",
					"Response time is less than 200ms": true,
					"ID is present": true,
					"Username is present": true,
					"Password is present": true,
					"Profile ID is present": true,
					"Profile is present": true
				}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "1051f0f8-cb78-9f4b-1637-c7578385a5f6",
			"name": "GET Profile pat7",
			"url": "http://localhost:8080/jMessage/webapi/profiles/pat7",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Content-Type is present": "application/json",
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Profile Name is present": true,
				"First Name is present": true,
				"Last Name is present": true,
				"Created is present": true,
				"User is present": true,
				"Profile ID should be 1": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile Name is present": {
					"pass": 1,
					"fail": 0
				},
				"First Name is present": {
					"pass": 1,
					"fail": 0
				},
				"Last Name is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"User is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID should be 1": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Content-Type is present": "application/json",
					"Response time is less than 200ms": true,
					"ID is present": true,
					"Profile Name is present": true,
					"First Name is present": true,
					"Last Name is present": true,
					"Created is present": true,
					"User is present": true,
					"Profile ID should be 1": true
				}
			],
			"time": 8,
			"totalRequestTime": 8,
			"iterationResults": {}
		},
		{
			"id": "4bca090e-b209-d825-97ff-3c8bfedf3d53",
			"name": "GET User john5",
			"url": "http://localhost:8080/jMessage/webapi/users/john5",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {
				"Content-Type is present": "application/json",
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Username is present": true,
				"Password is present": true,
				"Profile ID is present": true,
				"Profile is present": true,
				"User ID should be 2": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Username is present": {
					"pass": 1,
					"fail": 0
				},
				"Password is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile is present": {
					"pass": 1,
					"fail": 0
				},
				"User ID should be 2": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Content-Type is present": "application/json",
					"Response time is less than 200ms": true,
					"ID is present": true,
					"Username is present": true,
					"Password is present": true,
					"Profile ID is present": true,
					"Profile is present": true,
					"User ID should be 2": true
				}
			],
			"time": 8,
			"totalRequestTime": 8,
			"iterationResults": {}
		}
	],
	"totalPass": 50,
	"totalFail": 0,
	"totalTime": 113,
	"lifecycle": "done",
	"willStop": false,
	"requests": [
		{
			"name": "POST Link",
			"id": "fb0b7584-cdab-cec6-1093-0efa6e73a295",
			"url": "http://localhost:8080/jMessage/webapi/messages/2/links/",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "POST User",
			"id": "bae52bb8-d20c-cb49-ccc6-b441c597a3f5",
			"url": "http://localhost:8080/jMessage/webapi/users/",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "POST Profile",
			"id": "d8559fb3-ceb8-1319-9a84-f22aab86d245",
			"url": "http://localhost:8080/jMessage/webapi/profiles/",
			"time": 12,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "POST Comment",
			"id": "1254f440-a23e-3417-d20d-2e364520a63e",
			"url": "http://localhost:8080/jMessage/webapi/messages/1/comments/",
			"time": 11,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "POST Message",
			"id": "57b8de4c-8a19-68a0-89db-9569c0fc14f3",
			"url": "http://localhost:8080/jMessage/webapi/messages/",
			"time": 10,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": "The request has been fulfilled and resulted in a new resource being created."
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Message is present": {
					"pass": 1,
					"fail": 0
				},
				"Author is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"Links are present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID should be 3": {
					"pass": 1,
					"fail": 0
				},
				"Message ID should be 9": {
					"pass": 1,
					"fail": 0
				},
				"Valid schema": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Content-Type is present",
				"Response time is less than 200ms",
				"ID is present",
				"Message is present",
				"Author is present",
				"Created is present",
				"Links are present",
				"Profile ID should be 3",
				"Message ID should be 9",
				"Valid schema"
			],
			"gridData": [
				[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				]
			],
			"tests": {
				"Content-Type is present": true,
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Message is present": true,
				"Author is present": true,
				"Created is present": true,
				"Links are present": true,
				"Profile ID should be 3": true,
				"Message ID should be 9": true,
				"Valid schema": true
			}
		},
		{
			"name": "GET Message",
			"id": "e360149d-e7db-269e-3345-cc1011caccb8",
			"url": "http://localhost:8080/jMessage/webapi/messages/1",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Message is present": {
					"pass": 1,
					"fail": 0
				},
				"Author is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"Links are present": {
					"pass": 1,
					"fail": 0
				},
				"User ID should be 1": {
					"pass": 1,
					"fail": 0
				},
				"Valid schema": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Content-Type is present",
				"Response time is less than 200ms",
				"ID is present",
				"Message is present",
				"Author is present",
				"Created is present",
				"Links are present",
				"User ID should be 1",
				"Valid schema"
			],
			"gridData": [
				[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				]
			],
			"tests": {
				"Content-Type is present": true,
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Message is present": true,
				"Author is present": true,
				"Created is present": true,
				"Links are present": true,
				"User ID should be 1": true,
				"Valid schema": true
			}
		},
		{
			"name": "GET Messages",
			"id": "b8eef6ad-996e-d256-1ca5-e68b44168755",
			"url": "http://localhost:8080/jMessage/webapi/messages/",
			"time": 18,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Message is present": {
					"pass": 1,
					"fail": 0
				},
				"Author is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"Links are present": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Content-Type is present",
				"Response time is less than 200ms",
				"ID is present",
				"Message is present",
				"Author is present",
				"Created is present",
				"Links are present"
			],
			"gridData": [
				[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				]
			],
			"tests": {
				"Content-Type is present": true,
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Message is present": true,
				"Author is present": true,
				"Created is present": true,
				"Links are present": true
			}
		},
		{
			"name": "GET Profiles",
			"id": "3acaf476-fa37-ed24-2c60-507a247e3432",
			"url": "http://localhost:8080/jMessage/webapi/profiles/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "GET Users",
			"id": "fcb0619b-1196-4471-94cd-57563be3d9c2",
			"url": "http://localhost:8080/jMessage/webapi/users/",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Username is present": {
					"pass": 1,
					"fail": 0
				},
				"Password is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile is present": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Content-Type is present",
				"Response time is less than 200ms",
				"ID is present",
				"Username is present",
				"Password is present",
				"Profile ID is present",
				"Profile is present"
			],
			"gridData": [
				[
					true,
					true,
					true,
					true,
					true,
					true,
					true
				]
			],
			"tests": {
				"Content-Type is present": true,
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Username is present": true,
				"Password is present": true,
				"Profile ID is present": true,
				"Profile is present": true
			}
		},
		{
			"name": "GET Profile pat7",
			"id": "1051f0f8-cb78-9f4b-1637-c7578385a5f6",
			"url": "http://localhost:8080/jMessage/webapi/profiles/pat7",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile Name is present": {
					"pass": 1,
					"fail": 0
				},
				"First Name is present": {
					"pass": 1,
					"fail": 0
				},
				"Last Name is present": {
					"pass": 1,
					"fail": 0
				},
				"Created is present": {
					"pass": 1,
					"fail": 0
				},
				"User is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID should be 1": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Content-Type is present",
				"Response time is less than 200ms",
				"ID is present",
				"Profile Name is present",
				"First Name is present",
				"Last Name is present",
				"Created is present",
				"User is present",
				"Profile ID should be 1"
			],
			"gridData": [
				[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				]
			],
			"tests": {
				"Content-Type is present": true,
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Profile Name is present": true,
				"First Name is present": true,
				"Last Name is present": true,
				"Created is present": true,
				"User is present": true,
				"Profile ID should be 1": true
			}
		},
		{
			"name": "GET User john5",
			"id": "4bca090e-b209-d825-97ff-3c8bfedf3d53",
			"url": "http://localhost:8080/jMessage/webapi/users/john5",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				},
				"ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Username is present": {
					"pass": 1,
					"fail": 0
				},
				"Password is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile ID is present": {
					"pass": 1,
					"fail": 0
				},
				"Profile is present": {
					"pass": 1,
					"fail": 0
				},
				"User ID should be 2": {
					"pass": 1,
					"fail": 0
				}
			},
			"gridTitles": [
				"Content-Type is present",
				"Response time is less than 200ms",
				"ID is present",
				"Username is present",
				"Password is present",
				"Profile ID is present",
				"Profile is present",
				"User ID should be 2"
			],
			"gridData": [
				[
					true,
					true,
					true,
					true,
					true,
					true,
					true,
					true
				]
			],
			"tests": {
				"Content-Type is present": true,
				"Response time is less than 200ms": true,
				"ID is present": true,
				"Username is present": true,
				"Password is present": true,
				"Profile ID is present": true,
				"Profile is present": true,
				"User ID should be 2": true
			}
		}
	],
	"synced": false
}